// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: pkg/proto/gtfs-realtime.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeedHeader_Incrementality int32

const (
	FeedHeader_FULL_DATASET FeedHeader_Incrementality = 0
	FeedHeader_DIFFERENTIAL FeedHeader_Incrementality = 1
)

// Enum value maps for FeedHeader_Incrementality.
var (
	FeedHeader_Incrementality_name = map[int32]string{
		0: "FULL_DATASET",
		1: "DIFFERENTIAL",
	}
	FeedHeader_Incrementality_value = map[string]int32{
		"FULL_DATASET": 0,
		"DIFFERENTIAL": 1,
	}
)

func (x FeedHeader_Incrementality) Enum() *FeedHeader_Incrementality {
	p := new(FeedHeader_Incrementality)
	*p = x
	return p
}

func (x FeedHeader_Incrementality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeedHeader_Incrementality) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_gtfs_realtime_proto_enumTypes[0].Descriptor()
}

func (FeedHeader_Incrementality) Type() protoreflect.EnumType {
	return &file_pkg_proto_gtfs_realtime_proto_enumTypes[0]
}

func (x FeedHeader_Incrementality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeedHeader_Incrementality.Descriptor instead.
func (FeedHeader_Incrementality) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{1, 0}
}

type TripUpdate_StopTimeUpdate_ScheduleRelationship int32

const (
	TripUpdate_StopTimeUpdate_SCHEDULED   TripUpdate_StopTimeUpdate_ScheduleRelationship = 0
	TripUpdate_StopTimeUpdate_SKIPPED     TripUpdate_StopTimeUpdate_ScheduleRelationship = 1
	TripUpdate_StopTimeUpdate_NO_DATA     TripUpdate_StopTimeUpdate_ScheduleRelationship = 2
	TripUpdate_StopTimeUpdate_UNSCHEDULED TripUpdate_StopTimeUpdate_ScheduleRelationship = 3
)

// Enum value maps for TripUpdate_StopTimeUpdate_ScheduleRelationship.
var (
	TripUpdate_StopTimeUpdate_ScheduleRelationship_name = map[int32]string{
		0: "SCHEDULED",
		1: "SKIPPED",
		2: "NO_DATA",
		3: "UNSCHEDULED",
	}
	TripUpdate_StopTimeUpdate_ScheduleRelationship_value = map[string]int32{
		"SCHEDULED":   0,
		"SKIPPED":     1,
		"NO_DATA":     2,
		"UNSCHEDULED": 3,
	}
)

func (x TripUpdate_StopTimeUpdate_ScheduleRelationship) Enum() *TripUpdate_StopTimeUpdate_ScheduleRelationship {
	p := new(TripUpdate_StopTimeUpdate_ScheduleRelationship)
	*p = x
	return p
}

func (x TripUpdate_StopTimeUpdate_ScheduleRelationship) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TripUpdate_StopTimeUpdate_ScheduleRelationship) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_gtfs_realtime_proto_enumTypes[1].Descriptor()
}

func (TripUpdate_StopTimeUpdate_ScheduleRelationship) Type() protoreflect.EnumType {
	return &file_pkg_proto_gtfs_realtime_proto_enumTypes[1]
}

func (x TripUpdate_StopTimeUpdate_ScheduleRelationship) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TripUpdate_StopTimeUpdate_ScheduleRelationship.Descriptor instead.
func (TripUpdate_StopTimeUpdate_ScheduleRelationship) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{3, 1, 0}
}

type VehiclePosition_VehicleStopStatus int32

const (
	VehiclePosition_INCOMING_AT   VehiclePosition_VehicleStopStatus = 0
	VehiclePosition_STOPPED_AT    VehiclePosition_VehicleStopStatus = 1
	VehiclePosition_IN_TRANSIT_TO VehiclePosition_VehicleStopStatus = 2
)

// Enum value maps for VehiclePosition_VehicleStopStatus.
var (
	VehiclePosition_VehicleStopStatus_name = map[int32]string{
		0: "INCOMING_AT",
		1: "STOPPED_AT",
		2: "IN_TRANSIT_TO",
	}
	VehiclePosition_VehicleStopStatus_value = map[string]int32{
		"INCOMING_AT":   0,
		"STOPPED_AT":    1,
		"IN_TRANSIT_TO": 2,
	}
)

func (x VehiclePosition_VehicleStopStatus) Enum() *VehiclePosition_VehicleStopStatus {
	p := new(VehiclePosition_VehicleStopStatus)
	*p = x
	return p
}

func (x VehiclePosition_VehicleStopStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VehiclePosition_VehicleStopStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_gtfs_realtime_proto_enumTypes[2].Descriptor()
}

func (VehiclePosition_VehicleStopStatus) Type() protoreflect.EnumType {
	return &file_pkg_proto_gtfs_realtime_proto_enumTypes[2]
}

func (x VehiclePosition_VehicleStopStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VehiclePosition_VehicleStopStatus.Descriptor instead.
func (VehiclePosition_VehicleStopStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{4, 0}
}

type TripDescriptor_ScheduleRelationship int32

const (
	TripDescriptor_SCHEDULED   TripDescriptor_ScheduleRelationship = 0
	TripDescriptor_ADDED       TripDescriptor_ScheduleRelationship = 1
	TripDescriptor_UNSCHEDULED TripDescriptor_ScheduleRelationship = 2
	TripDescriptor_CANCELED    TripDescriptor_ScheduleRelationship = 3
)

// Enum value maps for TripDescriptor_ScheduleRelationship.
var (
	TripDescriptor_ScheduleRelationship_name = map[int32]string{
		0: "SCHEDULED",
		1: "ADDED",
		2: "UNSCHEDULED",
		3: "CANCELED",
	}
	TripDescriptor_ScheduleRelationship_value = map[string]int32{
		"SCHEDULED":   0,
		"ADDED":       1,
		"UNSCHEDULED": 2,
		"CANCELED":    3,
	}
)

func (x TripDescriptor_ScheduleRelationship) Enum() *TripDescriptor_ScheduleRelationship {
	p := new(TripDescriptor_ScheduleRelationship)
	*p = x
	return p
}

func (x TripDescriptor_ScheduleRelationship) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TripDescriptor_ScheduleRelationship) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_gtfs_realtime_proto_enumTypes[3].Descriptor()
}

func (TripDescriptor_ScheduleRelationship) Type() protoreflect.EnumType {
	return &file_pkg_proto_gtfs_realtime_proto_enumTypes[3]
}

func (x TripDescriptor_ScheduleRelationship) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TripDescriptor_ScheduleRelationship.Descriptor instead.
func (TripDescriptor_ScheduleRelationship) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{6, 0}
}

type FeedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *FeedHeader            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Entity        []*FeedEntity          `protobuf:"bytes,2,rep,name=entity,proto3" json:"entity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedMessage) Reset() {
	*x = FeedMessage{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedMessage) ProtoMessage() {}

func (x *FeedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedMessage.ProtoReflect.Descriptor instead.
func (*FeedMessage) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{0}
}

func (x *FeedMessage) GetHeader() *FeedHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *FeedMessage) GetEntity() []*FeedEntity {
	if x != nil {
		return x.Entity
	}
	return nil
}

type FeedHeader struct {
	state               protoimpl.MessageState    `protogen:"open.v1"`
	GtfsRealtimeVersion string                    `protobuf:"bytes,1,opt,name=gtfs_realtime_version,json=gtfsRealtimeVersion,proto3" json:"gtfs_realtime_version,omitempty"`
	Incrementality      FeedHeader_Incrementality `protobuf:"varint,2,opt,name=incrementality,proto3,enum=transit_realtime.FeedHeader_Incrementality" json:"incrementality,omitempty"`
	Timestamp           uint64                    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	FeedVersion         string                    `protobuf:"bytes,4,opt,name=feed_version,json=feedVersion,proto3" json:"feed_version,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FeedHeader) Reset() {
	*x = FeedHeader{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedHeader) ProtoMessage() {}

func (x *FeedHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedHeader.ProtoReflect.Descriptor instead.
func (*FeedHeader) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{1}
}

func (x *FeedHeader) GetGtfsRealtimeVersion() string {
	if x != nil {
		return x.GtfsRealtimeVersion
	}
	return ""
}

func (x *FeedHeader) GetIncrementality() FeedHeader_Incrementality {
	if x != nil {
		return x.Incrementality
	}
	return FeedHeader_FULL_DATASET
}

func (x *FeedHeader) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FeedHeader) GetFeedVersion() string {
	if x != nil {
		return x.FeedVersion
	}
	return ""
}

type FeedEntity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsDeleted     bool                   `protobuf:"varint,2,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	TripUpdate    *TripUpdate            `protobuf:"bytes,3,opt,name=trip_update,json=tripUpdate,proto3" json:"trip_update,omitempty"`
	Vehicle       *VehiclePosition       `protobuf:"bytes,4,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
	Alert         *Alert                 `protobuf:"bytes,5,opt,name=alert,proto3" json:"alert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedEntity) Reset() {
	*x = FeedEntity{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedEntity) ProtoMessage() {}

func (x *FeedEntity) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedEntity.ProtoReflect.Descriptor instead.
func (*FeedEntity) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{2}
}

func (x *FeedEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FeedEntity) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *FeedEntity) GetTripUpdate() *TripUpdate {
	if x != nil {
		return x.TripUpdate
	}
	return nil
}

func (x *FeedEntity) GetVehicle() *VehiclePosition {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *FeedEntity) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type TripUpdate struct {
	state          protoimpl.MessageState       `protogen:"open.v1"`
	Trip           *TripDescriptor              `protobuf:"bytes,1,opt,name=trip,proto3" json:"trip,omitempty"`
	Vehicle        *VehicleDescriptor           `protobuf:"bytes,3,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
	StopTimeUpdate []*TripUpdate_StopTimeUpdate `protobuf:"bytes,2,rep,name=stop_time_update,json=stopTimeUpdate,proto3" json:"stop_time_update,omitempty"`
	Timestamp      uint64                       `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Delay          int32                        `protobuf:"varint,5,opt,name=delay,proto3" json:"delay,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TripUpdate) Reset() {
	*x = TripUpdate{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripUpdate) ProtoMessage() {}

func (x *TripUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripUpdate.ProtoReflect.Descriptor instead.
func (*TripUpdate) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{3}
}

func (x *TripUpdate) GetTrip() *TripDescriptor {
	if x != nil {
		return x.Trip
	}
	return nil
}

func (x *TripUpdate) GetVehicle() *VehicleDescriptor {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *TripUpdate) GetStopTimeUpdate() []*TripUpdate_StopTimeUpdate {
	if x != nil {
		return x.StopTimeUpdate
	}
	return nil
}

func (x *TripUpdate) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TripUpdate) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type VehiclePosition struct {
	state               protoimpl.MessageState            `protogen:"open.v1"`
	Trip                *TripDescriptor                   `protobuf:"bytes,1,opt,name=trip,proto3" json:"trip,omitempty"`
	Position            *Position                         `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	CurrentStopSequence uint32                            `protobuf:"varint,3,opt,name=current_stop_sequence,json=currentStopSequence,proto3" json:"current_stop_sequence,omitempty"`
	StopId              string                            `protobuf:"bytes,7,opt,name=stop_id,json=stopId,proto3" json:"stop_id,omitempty"`
	CurrentStatus       VehiclePosition_VehicleStopStatus `protobuf:"varint,4,opt,name=current_status,json=currentStatus,proto3,enum=transit_realtime.VehiclePosition_VehicleStopStatus" json:"current_status,omitempty"`
	Timestamp           uint64                            `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *VehiclePosition) Reset() {
	*x = VehiclePosition{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehiclePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePosition) ProtoMessage() {}

func (x *VehiclePosition) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePosition.ProtoReflect.Descriptor instead.
func (*VehiclePosition) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{4}
}

func (x *VehiclePosition) GetTrip() *TripDescriptor {
	if x != nil {
		return x.Trip
	}
	return nil
}

func (x *VehiclePosition) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *VehiclePosition) GetCurrentStopSequence() uint32 {
	if x != nil {
		return x.CurrentStopSequence
	}
	return 0
}

func (x *VehiclePosition) GetStopId() string {
	if x != nil {
		return x.StopId
	}
	return ""
}

func (x *VehiclePosition) GetCurrentStatus() VehiclePosition_VehicleStopStatus {
	if x != nil {
		return x.CurrentStatus
	}
	return VehiclePosition_INCOMING_AT
}

func (x *VehiclePosition) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type Position struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float32                `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32                `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Bearing       float32                `protobuf:"fixed32,3,opt,name=bearing,proto3" json:"bearing,omitempty"`
	Odometer      float64                `protobuf:"fixed64,4,opt,name=odometer,proto3" json:"odometer,omitempty"`
	Speed         float32                `protobuf:"fixed32,5,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{5}
}

func (x *Position) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Position) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Position) GetBearing() float32 {
	if x != nil {
		return x.Bearing
	}
	return 0
}

func (x *Position) GetOdometer() float64 {
	if x != nil {
		return x.Odometer
	}
	return 0
}

func (x *Position) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type TripDescriptor struct {
	state                protoimpl.MessageState              `protogen:"open.v1"`
	TripId               string                              `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	RouteId              string                              `protobuf:"bytes,5,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	DirectionId          uint32                              `protobuf:"varint,6,opt,name=direction_id,json=directionId,proto3" json:"direction_id,omitempty"`
	StartTime            string                              `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StartDate            string                              `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	ScheduleRelationship TripDescriptor_ScheduleRelationship `protobuf:"varint,4,opt,name=schedule_relationship,json=scheduleRelationship,proto3,enum=transit_realtime.TripDescriptor_ScheduleRelationship" json:"schedule_relationship,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TripDescriptor) Reset() {
	*x = TripDescriptor{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripDescriptor) ProtoMessage() {}

func (x *TripDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripDescriptor.ProtoReflect.Descriptor instead.
func (*TripDescriptor) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{6}
}

func (x *TripDescriptor) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *TripDescriptor) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *TripDescriptor) GetDirectionId() uint32 {
	if x != nil {
		return x.DirectionId
	}
	return 0
}

func (x *TripDescriptor) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TripDescriptor) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *TripDescriptor) GetScheduleRelationship() TripDescriptor_ScheduleRelationship {
	if x != nil {
		return x.ScheduleRelationship
	}
	return TripDescriptor_SCHEDULED
}

type VehicleDescriptor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	LicensePlate  string                 `protobuf:"bytes,3,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VehicleDescriptor) Reset() {
	*x = VehicleDescriptor{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleDescriptor) ProtoMessage() {}

func (x *VehicleDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleDescriptor.ProtoReflect.Descriptor instead.
func (*VehicleDescriptor) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{7}
}

func (x *VehicleDescriptor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VehicleDescriptor) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *VehicleDescriptor) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

type Alert struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ActivePeriod   []*TimeRange           `protobuf:"bytes,1,rep,name=active_period,json=activePeriod,proto3" json:"active_period,omitempty"`
	InformedEntity []*EntitySelector      `protobuf:"bytes,5,rep,name=informed_entity,json=informedEntity,proto3" json:"informed_entity,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Alert) Reset() {
	*x = Alert{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{8}
}

func (x *Alert) GetActivePeriod() []*TimeRange {
	if x != nil {
		return x.ActivePeriod
	}
	return nil
}

func (x *Alert) GetInformedEntity() []*EntitySelector {
	if x != nil {
		return x.InformedEntity
	}
	return nil
}

type TimeRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         uint64                 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End           uint64                 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{9}
}

func (x *TimeRange) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TimeRange) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

type EntitySelector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgencyId      string                 `protobuf:"bytes,1,opt,name=agency_id,json=agencyId,proto3" json:"agency_id,omitempty"`
	RouteId       string                 `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	RouteType     int32                  `protobuf:"varint,3,opt,name=route_type,json=routeType,proto3" json:"route_type,omitempty"`
	Trip          *TripDescriptor        `protobuf:"bytes,4,opt,name=trip,proto3" json:"trip,omitempty"`
	StopId        string                 `protobuf:"bytes,5,opt,name=stop_id,json=stopId,proto3" json:"stop_id,omitempty"`
	DirectionId   uint32                 `protobuf:"varint,6,opt,name=direction_id,json=directionId,proto3" json:"direction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntitySelector) Reset() {
	*x = EntitySelector{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntitySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySelector) ProtoMessage() {}

func (x *EntitySelector) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySelector.ProtoReflect.Descriptor instead.
func (*EntitySelector) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{10}
}

func (x *EntitySelector) GetAgencyId() string {
	if x != nil {
		return x.AgencyId
	}
	return ""
}

func (x *EntitySelector) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *EntitySelector) GetRouteType() int32 {
	if x != nil {
		return x.RouteType
	}
	return 0
}

func (x *EntitySelector) GetTrip() *TripDescriptor {
	if x != nil {
		return x.Trip
	}
	return nil
}

func (x *EntitySelector) GetStopId() string {
	if x != nil {
		return x.StopId
	}
	return ""
}

func (x *EntitySelector) GetDirectionId() uint32 {
	if x != nil {
		return x.DirectionId
	}
	return 0
}

type TripUpdate_StopTimeEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Delay         int32                  `protobuf:"varint,1,opt,name=delay,proto3" json:"delay,omitempty"`
	Time          int64                  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Uncertainty   int32                  `protobuf:"varint,3,opt,name=uncertainty,proto3" json:"uncertainty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TripUpdate_StopTimeEvent) Reset() {
	*x = TripUpdate_StopTimeEvent{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripUpdate_StopTimeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripUpdate_StopTimeEvent) ProtoMessage() {}

func (x *TripUpdate_StopTimeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripUpdate_StopTimeEvent.ProtoReflect.Descriptor instead.
func (*TripUpdate_StopTimeEvent) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TripUpdate_StopTimeEvent) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *TripUpdate_StopTimeEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TripUpdate_StopTimeEvent) GetUncertainty() int32 {
	if x != nil {
		return x.Uncertainty
	}
	return 0
}

type TripUpdate_StopTimeUpdate struct {
	state                protoimpl.MessageState                         `protogen:"open.v1"`
	StopSequence         uint32                                         `protobuf:"varint,1,opt,name=stop_sequence,json=stopSequence,proto3" json:"stop_sequence,omitempty"`
	StopId               string                                         `protobuf:"bytes,4,opt,name=stop_id,json=stopId,proto3" json:"stop_id,omitempty"`
	Arrival              *TripUpdate_StopTimeEvent                      `protobuf:"bytes,2,opt,name=arrival,proto3" json:"arrival,omitempty"`
	Departure            *TripUpdate_StopTimeEvent                      `protobuf:"bytes,3,opt,name=departure,proto3" json:"departure,omitempty"`
	ScheduleRelationship TripUpdate_StopTimeUpdate_ScheduleRelationship `protobuf:"varint,5,opt,name=schedule_relationship,json=scheduleRelationship,proto3,enum=transit_realtime.TripUpdate_StopTimeUpdate_ScheduleRelationship" json:"schedule_relationship,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TripUpdate_StopTimeUpdate) Reset() {
	*x = TripUpdate_StopTimeUpdate{}
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripUpdate_StopTimeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripUpdate_StopTimeUpdate) ProtoMessage() {}

func (x *TripUpdate_StopTimeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gtfs_realtime_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripUpdate_StopTimeUpdate.ProtoReflect.Descriptor instead.
func (*TripUpdate_StopTimeUpdate) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gtfs_realtime_proto_rawDescGZIP(), []int{3, 1}
}

func (x *TripUpdate_StopTimeUpdate) GetStopSequence() uint32 {
	if x != nil {
		return x.StopSequence
	}
	return 0
}

func (x *TripUpdate_StopTimeUpdate) GetStopId() string {
	if x != nil {
		return x.StopId
	}
	return ""
}

func (x *TripUpdate_StopTimeUpdate) GetArrival() *TripUpdate_StopTimeEvent {
	if x != nil {
		return x.Arrival
	}
	return nil
}

func (x *TripUpdate_StopTimeUpdate) GetDeparture() *TripUpdate_StopTimeEvent {
	if x != nil {
		return x.Departure
	}
	return nil
}

func (x *TripUpdate_StopTimeUpdate) GetScheduleRelationship() TripUpdate_StopTimeUpdate_ScheduleRelationship {
	if x != nil {
		return x.ScheduleRelationship
	}
	return TripUpdate_StopTimeUpdate_SCHEDULED
}

var File_pkg_proto_gtfs_realtime_proto protoreflect.FileDescriptor

var file_pkg_proto_gtfs_realtime_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x74, 0x66, 0x73,
	0x2d, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x79, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x8c, 0x02, 0x0a,
	0x0a, 0x46, 0x65, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x67,
	0x74, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x74, 0x66, 0x73,
	0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x53, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x0e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x55, 0x4c, 0x4c, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x46,
	0x46, 0x45, 0x52, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x22, 0xe6, 0x01, 0x0a, 0x0a,
	0x46, 0x65, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x74, 0x72, 0x69,
	0x70, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x74, 0x72,
	0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72,
	0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x22, 0x93, 0x06, 0x0a, 0x0a, 0x54, 0x72, 0x69, 0x70, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x72, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x52, 0x04, 0x74, 0x72, 0x69, 0x70, 0x12, 0x3d, 0x0a, 0x07, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52,
	0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61,
	0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x0e, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x1a, 0x5b, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79,
	0x1a, 0xa7, 0x03, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x44, 0x0a, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61,
	0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x07,
	0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x48, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x72,
	0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x75, 0x0a, 0x15, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x40, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x22, 0x50, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x4e, 0x4f, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22, 0x8f, 0x03, 0x0a, 0x0f, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x04, 0x74, 0x72, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x54, 0x72, 0x69, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x04,
	0x74, 0x72, 0x69, 0x70, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x33, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x47, 0x0a, 0x11, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74,
	0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x43, 0x4f,
	0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x4f,
	0x50, 0x50, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x5f, 0x54, 0x4f, 0x10, 0x02, 0x22, 0x90, 0x01, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22,
	0xe2, 0x02, 0x0a, 0x0e, 0x54, 0x72, 0x69, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x14, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x22, 0x4f, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44,
	0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x43, 0x48, 0x45, 0x44,
	0x55, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x45, 0x44, 0x10, 0x03, 0x22, 0x5e, 0x0a, 0x11, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x40,
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f,
	0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x49, 0x0a, 0x0f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0e, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x33, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x22, 0xd9, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x72,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x74, 0x72, 0x69, 0x70,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0a, 0x5a, 0x08,
	0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pkg_proto_gtfs_realtime_proto_rawDescOnce sync.Once
	file_pkg_proto_gtfs_realtime_proto_rawDescData []byte
)

func file_pkg_proto_gtfs_realtime_proto_rawDescGZIP() []byte {
	file_pkg_proto_gtfs_realtime_proto_rawDescOnce.Do(func() {
		file_pkg_proto_gtfs_realtime_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_gtfs_realtime_proto_rawDesc), len(file_pkg_proto_gtfs_realtime_proto_rawDesc)))
	})
	return file_pkg_proto_gtfs_realtime_proto_rawDescData
}

var file_pkg_proto_gtfs_realtime_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pkg_proto_gtfs_realtime_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pkg_proto_gtfs_realtime_proto_goTypes = []any{
	(FeedHeader_Incrementality)(0),                      // 0: transit_realtime.FeedHeader.Incrementality
	(TripUpdate_StopTimeUpdate_ScheduleRelationship)(0), // 1: transit_realtime.TripUpdate.StopTimeUpdate.ScheduleRelationship
	(VehiclePosition_VehicleStopStatus)(0),              // 2: transit_realtime.VehiclePosition.VehicleStopStatus
	(TripDescriptor_ScheduleRelationship)(0),            // 3: transit_realtime.TripDescriptor.ScheduleRelationship
	(*FeedMessage)(nil),                                 // 4: transit_realtime.FeedMessage
	(*FeedHeader)(nil),                                  // 5: transit_realtime.FeedHeader
	(*FeedEntity)(nil),                                  // 6: transit_realtime.FeedEntity
	(*TripUpdate)(nil),                                  // 7: transit_realtime.TripUpdate
	(*VehiclePosition)(nil),                             // 8: transit_realtime.VehiclePosition
	(*Position)(nil),                                    // 9: transit_realtime.Position
	(*TripDescriptor)(nil),                              // 10: transit_realtime.TripDescriptor
	(*VehicleDescriptor)(nil),                           // 11: transit_realtime.VehicleDescriptor
	(*Alert)(nil),                                       // 12: transit_realtime.Alert
	(*TimeRange)(nil),                                   // 13: transit_realtime.TimeRange
	(*EntitySelector)(nil),                              // 14: transit_realtime.EntitySelector
	(*TripUpdate_StopTimeEvent)(nil),                    // 15: transit_realtime.TripUpdate.StopTimeEvent
	(*TripUpdate_StopTimeUpdate)(nil),                   // 16: transit_realtime.TripUpdate.StopTimeUpdate
}
var file_pkg_proto_gtfs_realtime_proto_depIdxs = []int32{
	5,  // 0: transit_realtime.FeedMessage.header:type_name -> transit_realtime.FeedHeader
	6,  // 1: transit_realtime.FeedMessage.entity:type_name -> transit_realtime.FeedEntity
	0,  // 2: transit_realtime.FeedHeader.incrementality:type_name -> transit_realtime.FeedHeader.Incrementality
	7,  // 3: transit_realtime.FeedEntity.trip_update:type_name -> transit_realtime.TripUpdate
	8,  // 4: transit_realtime.FeedEntity.vehicle:type_name -> transit_realtime.VehiclePosition
	12, // 5: transit_realtime.FeedEntity.alert:type_name -> transit_realtime.Alert
	10, // 6: transit_realtime.TripUpdate.trip:type_name -> transit_realtime.TripDescriptor
	11, // 7: transit_realtime.TripUpdate.vehicle:type_name -> transit_realtime.VehicleDescriptor
	16, // 8: transit_realtime.TripUpdate.stop_time_update:type_name -> transit_realtime.TripUpdate.StopTimeUpdate
	10, // 9: transit_realtime.VehiclePosition.trip:type_name -> transit_realtime.TripDescriptor
	9,  // 10: transit_realtime.VehiclePosition.position:type_name -> transit_realtime.Position
	2,  // 11: transit_realtime.VehiclePosition.current_status:type_name -> transit_realtime.VehiclePosition.VehicleStopStatus
	3,  // 12: transit_realtime.TripDescriptor.schedule_relationship:type_name -> transit_realtime.TripDescriptor.ScheduleRelationship
	13, // 13: transit_realtime.Alert.active_period:type_name -> transit_realtime.TimeRange
	14, // 14: transit_realtime.Alert.informed_entity:type_name -> transit_realtime.EntitySelector
	10, // 15: transit_realtime.EntitySelector.trip:type_name -> transit_realtime.TripDescriptor
	15, // 16: transit_realtime.TripUpdate.StopTimeUpdate.arrival:type_name -> transit_realtime.TripUpdate.StopTimeEvent
	15, // 17: transit_realtime.TripUpdate.StopTimeUpdate.departure:type_name -> transit_realtime.TripUpdate.StopTimeEvent
	1,  // 18: transit_realtime.TripUpdate.StopTimeUpdate.schedule_relationship:type_name -> transit_realtime.TripUpdate.StopTimeUpdate.ScheduleRelationship
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_pkg_proto_gtfs_realtime_proto_init() }
func file_pkg_proto_gtfs_realtime_proto_init() {
	if File_pkg_proto_gtfs_realtime_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_gtfs_realtime_proto_rawDesc), len(file_pkg_proto_gtfs_realtime_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_gtfs_realtime_proto_goTypes,
		DependencyIndexes: file_pkg_proto_gtfs_realtime_proto_depIdxs,
		EnumInfos:         file_pkg_proto_gtfs_realtime_proto_enumTypes,
		MessageInfos:      file_pkg_proto_gtfs_realtime_proto_msgTypes,
	}.Build()
	File_pkg_proto_gtfs_realtime_proto = out.File
	file_pkg_proto_gtfs_realtime_proto_goTypes = nil
	file_pkg_proto_gtfs_realtime_proto_depIdxs = nil
}
