syntax = "proto3";
package transit_realtime;
option go_package = "krakend_pb_to_json/proto";

message FeedMessage {
  FeedHeader header = 1;
  repeated FeedEntity entity = 2;
}

message FeedHeader {
  string gtfs_realtime_version = 1;
  enum Incrementality {
    FULL_DATASET = 0;
    DIFFERENTIAL = 1;
  }
  Incrementality incrementality = 2;
  uint64 timestamp = 3;
  string feed_version = 4;
}

message FeedEntity {
  string id = 1;
  bool is_deleted = 2;
  TripUpdate trip_update = 3;
  VehiclePosition vehicle = 4;
  Alert alert = 5;
}

message TripUpdate {
  TripDescriptor trip = 1;
  VehicleDescriptor vehicle = 3;
  
  message StopTimeEvent {
    int32 delay = 1;
    int64 time = 2;
    int32 uncertainty = 3;
  }

  message StopTimeUpdate {
    uint32 stop_sequence = 1;
    string stop_id = 4;
    StopTimeEvent arrival = 2;
    StopTimeEvent departure = 3;
    enum ScheduleRelationship {
      SCHEDULED = 0;
      SKIPPED = 1;
      NO_DATA = 2;
      UNSCHEDULED = 3;
    }
    ScheduleRelationship schedule_relationship = 5;
  }
  repeated StopTimeUpdate stop_time_update = 2;
  uint64 timestamp = 4;
  int32 delay = 5;
}

message VehiclePosition {
  TripDescriptor trip = 1;
  Position position = 2;
  uint32 current_stop_sequence = 3;
  string stop_id = 7;
  enum VehicleStopStatus {
    INCOMING_AT = 0;
    STOPPED_AT = 1;
    IN_TRANSIT_TO = 2;
  }
  VehicleStopStatus current_status = 4;
  uint64 timestamp = 5;
}

message Position {
  float latitude = 1;
  float longitude = 2;
  float bearing = 3;
  double odometer = 4;
  float speed = 5;
}

message TripDescriptor {
  string trip_id = 1;
  string route_id = 5;
  uint32 direction_id = 6;
  string start_time = 2;
  string start_date = 3;
  enum ScheduleRelationship {
    SCHEDULED = 0;
    ADDED = 1;
    UNSCHEDULED = 2;
    CANCELED = 3;
  }
  ScheduleRelationship schedule_relationship = 4;
}

message VehicleDescriptor {
  string id = 1;
  string label = 2;
  string license_plate = 3;
}

message Alert {
  repeated TimeRange active_period = 1;
  repeated EntitySelector informed_entity = 5;
}

message TimeRange {
  uint64 start = 1;
  uint64 end = 2;
}

message EntitySelector {
  string agency_id = 1;
  string route_id = 2;
  int32 route_type = 3;
  TripDescriptor trip = 4;
  string stop_id = 5;
  uint32 direction_id = 6;
}